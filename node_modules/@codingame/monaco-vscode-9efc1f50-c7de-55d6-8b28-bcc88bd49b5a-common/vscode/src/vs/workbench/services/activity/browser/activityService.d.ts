import { IActivity } from "@codingame/monaco-vscode-a7c9ae3c-16d2-5d17-86b2-981be7094566-common/vscode/vs/workbench/services/activity/common/activity";
import { IActivityService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/activity/common/activity.service";
import { IDisposable, Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { ViewContainer } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/views";
import { IViewDescriptorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/views.service";
import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
export declare class ActivityService extends Disposable implements IActivityService {
    private readonly viewDescriptorService;
    private readonly instantiationService;
    _serviceBrand: undefined;
    private readonly viewActivities;
    private readonly _onDidChangeActivity;
    readonly onDidChangeActivity: Event<string | ViewContainer>;
    private readonly viewContainerActivities;
    private readonly globalActivities;
    constructor(viewDescriptorService: IViewDescriptorService, instantiationService: IInstantiationService);
    showViewContainerActivity(viewContainerId: string, activity: IActivity): IDisposable;
    getViewContainerActivities(viewContainerId: string): IActivity[];
    showViewActivity(viewId: string, activity: IActivity): IDisposable;
    showAccountsActivity(activity: IActivity): IDisposable;
    showGlobalActivity(activity: IActivity): IDisposable;
    getActivity(id: string): IActivity[];
    private showActivity;
}
