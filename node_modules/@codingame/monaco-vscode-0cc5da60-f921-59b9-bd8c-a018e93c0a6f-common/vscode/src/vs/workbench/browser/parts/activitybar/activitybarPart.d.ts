import { Part } from "@codingame/monaco-vscode-d8236b3b-b91a-522d-89f4-94d70a546f6a-common/vscode/vs/workbench/browser/part";
import { Parts } from "@codingame/monaco-vscode-81f603ca-d6ea-5402-90dd-3014dffc63b4-common/vscode/vs/workbench/services/layout/browser/layoutService";
import { IWorkbenchLayoutService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/layout/browser/layoutService.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IAction } from "@codingame/monaco-vscode-api/vscode/vs/base/common/actions";
import { IPaneCompositePart } from "@codingame/monaco-vscode-6980eeab-47bb-5a48-8e15-32caf0785565-common/vscode/vs/workbench/browser/parts/paneCompositePart";
import { IPaneCompositeBarOptions, PaneCompositeBar } from "../paneCompositeBar.js";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { IMenuService } from "@codingame/monaco-vscode-api/vscode/vs/platform/actions/common/actions.service";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IViewDescriptorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/views.service";
import { IExtensionService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/extensions/common/extensions.service";
import { IWorkbenchEnvironmentService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/environment/common/environmentService.service";
import { IViewsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/views/common/viewsService.service";
export declare class ActivitybarPart extends Part {
    private readonly paneCompositePart;
    private readonly instantiationService;
    static readonly ACTION_HEIGHT = 48;
    static readonly pinnedViewContainersKey = "workbench.activity.pinnedViewlets2";
    static readonly placeholderViewContainersKey = "workbench.activity.placeholderViewlets";
    static readonly viewContainersWorkspaceStateKey = "workbench.activity.viewletsWorkspaceState";
    readonly minimumWidth: number;
    readonly maximumWidth: number;
    readonly minimumHeight: number;
    readonly maximumHeight: number;
    private readonly compositeBar;
    private content;
    constructor(paneCompositePart: IPaneCompositePart, instantiationService: IInstantiationService, layoutService: IWorkbenchLayoutService, themeService: IThemeService, storageService: IStorageService);
    private createCompositeBar;
    protected createContentArea(parent: HTMLElement): HTMLElement;
    getPinnedPaneCompositeIds(): string[];
    getVisiblePaneCompositeIds(): string[];
    getPaneCompositeIds(): string[];
    focus(): void;
    updateStyles(): void;
    show(focus?: boolean): void;
    hide(): void;
    layout(width: number, height: number): void;
    toJSON(): object;
}
export declare class ActivityBarCompositeBar extends PaneCompositeBar {
    private readonly configurationService;
    private readonly menuService;
    private element;
    private menuBar;
    private menuBarContainer;
    private compositeBarContainer;
    private readonly globalCompositeBar;
    private readonly keyboardNavigationDisposables;
    constructor(options: IPaneCompositeBarOptions, part: Parts, paneCompositePart: IPaneCompositePart, showGlobalActivities: boolean, instantiationService: IInstantiationService, storageService: IStorageService, extensionService: IExtensionService, viewDescriptorService: IViewDescriptorService, viewService: IViewsService, contextKeyService: IContextKeyService, environmentService: IWorkbenchEnvironmentService, configurationService: IConfigurationService, menuService: IMenuService, layoutService: IWorkbenchLayoutService);
    private fillContextMenuActions;
    private uninstallMenubar;
    private installMenubar;
    private registerKeyboardNavigationListeners;
    create(parent: HTMLElement): HTMLElement;
    layout(width: number, height: number): void;
    getActivityBarContextMenuActions(): IAction[];
}
