import { IAction } from "@codingame/monaco-vscode-api/vscode/vs/base/common/actions";
import { CancellationToken } from "@codingame/monaco-vscode-api/vscode/vs/base/common/cancellation";
import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { ITerminalCommandSelector, ITerminalOutputMatch, ITerminalOutputMatcher } from "@codingame/monaco-vscode-api/vscode/vs/platform/terminal/common/terminal";
import { ITerminalCommand } from "@codingame/monaco-vscode-0b087f42-a5a3-5eb9-9bfd-1eebc1bba163-common/vscode/vs/platform/terminal/common/capabilities/capabilities";
export interface ITerminalQuickFixProviderSelector {
    selector: ITerminalCommandSelector;
    provider: ITerminalQuickFixProvider;
}
export type TerminalQuickFixActionInternal = IAction | ITerminalQuickFixTerminalCommandAction | ITerminalQuickFixOpenerAction;
export type TerminalQuickFixCallback = (matchResult: ITerminalCommandMatchResult) => TerminalQuickFixActionInternal[] | TerminalQuickFixActionInternal | undefined;
export type TerminalQuickFixCallbackExtension = (terminalCommand: ITerminalCommand, lines: string[] | undefined, option: ITerminalQuickFixOptions, token: CancellationToken) => Promise<ITerminalQuickFix[] | ITerminalQuickFix | undefined>;
export interface ITerminalQuickFixProvider {
    provideTerminalQuickFixes(terminalCommand: ITerminalCommand, lines: string[] | undefined, option: ITerminalQuickFixOptions, token: CancellationToken): Promise<ITerminalQuickFix[] | ITerminalQuickFix | undefined>;
}
export declare enum TerminalQuickFixType {
    TerminalCommand = 0,
    Opener = 1,
    Port = 2,
    VscodeCommand = 3
}
export interface ITerminalQuickFixOptions {
    type: "internal" | "resolved" | "unresolved";
    id: string;
    commandLineMatcher: string | RegExp;
    outputMatcher?: ITerminalOutputMatcher;
    commandExitResult: "success" | "error";
    kind?: "fix" | "explain";
}
export interface ITerminalQuickFix {
    type: TerminalQuickFixType;
    id: string;
    source: string;
}
export interface ITerminalQuickFixTerminalCommandAction extends ITerminalQuickFix {
    type: TerminalQuickFixType.TerminalCommand;
    terminalCommand: string;
    shouldExecute?: boolean;
}
export interface ITerminalQuickFixOpenerAction extends ITerminalQuickFix {
    type: TerminalQuickFixType.Opener;
    uri: URI;
}
export interface ITerminalQuickFixCommandAction extends ITerminalQuickFix {
    title: string;
}
export interface ITerminalCommandMatchResult {
    commandLine: string;
    commandLineMatch: RegExpMatchArray;
    outputMatch?: ITerminalOutputMatch;
}
export interface ITerminalQuickFixInternalOptions extends ITerminalQuickFixOptions {
    type: "internal";
    getQuickFixes: TerminalQuickFixCallback;
}
export interface ITerminalQuickFixResolvedExtensionOptions extends ITerminalQuickFixOptions {
    type: "resolved";
    getQuickFixes: TerminalQuickFixCallbackExtension;
}
export interface ITerminalQuickFixUnresolvedExtensionOptions extends ITerminalQuickFixOptions {
    type: "unresolved";
}
