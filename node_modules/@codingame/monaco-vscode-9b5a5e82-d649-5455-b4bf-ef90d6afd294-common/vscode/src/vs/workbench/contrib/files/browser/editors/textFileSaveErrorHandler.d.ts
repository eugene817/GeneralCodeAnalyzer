import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { ISaveErrorHandler, ITextFileEditorModel, ITextFileSaveOptions } from "@codingame/monaco-vscode-aff8bc9b-c6f8-578f-9c8a-f70d14f9c13c-common/vscode/vs/workbench/services/textfile/common/textfiles";
import { ITextFileService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/textfile/common/textfiles.service";
import { ServicesAccessor, IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IWorkbenchContribution } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/contributions";
import { ITextModelService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/resolverService.service";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { INotificationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/notification/common/notification.service";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { IEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorService.service";
export declare const CONFLICT_RESOLUTION_CONTEXT = "saveConflictResolutionContext";
export declare const CONFLICT_RESOLUTION_SCHEME = "conflictResolution";
export declare class TextFileSaveErrorHandler extends Disposable implements ISaveErrorHandler, IWorkbenchContribution {
    private readonly notificationService;
    private readonly textFileService;
    private contextKeyService;
    private readonly editorService;
    private readonly instantiationService;
    private readonly storageService;
    static readonly ID = "workbench.contrib.textFileSaveErrorHandler";
    private readonly messages;
    private readonly conflictResolutionContext;
    private activeConflictResolutionResource;
    constructor(notificationService: INotificationService, textFileService: ITextFileService, contextKeyService: IContextKeyService, editorService: IEditorService, textModelService: ITextModelService, instantiationService: IInstantiationService, storageService: IStorageService);
    private registerListeners;
    private onActiveEditorChanged;
    private onFileSavedOrReverted;
    onSaveError(error: unknown, model: ITextFileEditorModel, options: ITextFileSaveOptions): void;
    dispose(): void;
}
export declare const acceptLocalChangesCommand: (accessor: ServicesAccessor, resource: URI) => Promise<boolean | undefined>;
export declare const revertLocalChangesCommand: (accessor: ServicesAccessor, resource: URI) => Promise<boolean | undefined>;
