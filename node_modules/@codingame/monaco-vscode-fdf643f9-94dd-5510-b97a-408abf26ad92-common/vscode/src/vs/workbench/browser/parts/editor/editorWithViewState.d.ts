import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { IEditorOpenContext } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/editor";
import { EditorPane } from "@codingame/monaco-vscode-12c5f9eb-72d3-57ca-babd-5bef7aa9de3b-common/vscode/vs/workbench/browser/parts/editor/editorPane";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { ITelemetryService } from "@codingame/monaco-vscode-api/vscode/vs/platform/telemetry/common/telemetry.service";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { ITextResourceConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/textResourceConfiguration.service";
import { IEditorGroup } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorGroupsService";
import { IEditorGroupsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorGroupsService.service";
import { IEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorService.service";
import { IExtUri } from "@codingame/monaco-vscode-api/vscode/vs/base/common/resources";
import { EditorInput } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/editor/editorInput";
export declare abstract class AbstractEditorWithViewState<T extends object> extends EditorPane {
    protected readonly instantiationService: IInstantiationService;
    protected readonly textResourceConfigurationService: ITextResourceConfigurationService;
    protected readonly editorService: IEditorService;
    protected readonly editorGroupService: IEditorGroupsService;
    private viewState;
    private readonly groupListener;
    private editorViewStateDisposables;
    constructor(id: string, group: IEditorGroup, viewStateStorageKey: string, telemetryService: ITelemetryService, instantiationService: IInstantiationService, storageService: IStorageService, textResourceConfigurationService: ITextResourceConfigurationService, themeService: IThemeService, editorService: IEditorService, editorGroupService: IEditorGroupsService);
    protected setEditorVisible(visible: boolean): void;
    private onWillCloseEditor;
    clearInput(): void;
    protected saveState(): void;
    private updateEditorViewState;
    private shouldRestoreEditorViewState;
    getViewState(): T | undefined;
    private saveEditorViewState;
    protected loadEditorViewState(input: EditorInput | undefined, context?: IEditorOpenContext): T | undefined;
    protected moveEditorViewState(source: URI, target: URI, comparer: IExtUri): void;
    protected clearEditorViewState(resource: URI, group?: IEditorGroup): void;
    dispose(): void;
    protected abstract computeEditorViewState(resource: URI): T | undefined;
    protected abstract tracksEditorViewState(input: EditorInput): boolean;
    protected tracksDisposedEditorViewState(): boolean;
    protected abstract toEditorViewStateResource(input: EditorInput): URI | undefined;
}
