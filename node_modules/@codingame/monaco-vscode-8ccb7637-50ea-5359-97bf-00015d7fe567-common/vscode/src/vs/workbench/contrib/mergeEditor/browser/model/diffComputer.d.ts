import { IReader } from "@codingame/monaco-vscode-api/vscode/vs/base/common/observable";
import { RangeMapping as DiffRangeMapping } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/diff/rangeMapping";
import { ITextModel } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/model";
import { IEditorWorkerService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/editorWorker.service";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { LineRange } from "@codingame/monaco-vscode-210e86a9-a91b-5273-b05d-390c776dde1f-common/vscode/vs/workbench/contrib/mergeEditor/browser/model/lineRange";
import { DetailedLineRangeMapping, RangeMapping } from "@codingame/monaco-vscode-210e86a9-a91b-5273-b05d-390c776dde1f-common/vscode/vs/workbench/contrib/mergeEditor/browser/model/mapping";
import { LineRange as DiffLineRange } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/core/lineRange";
export interface IMergeDiffComputer {
    computeDiff(textModel1: ITextModel, textModel2: ITextModel, reader: IReader): Promise<IMergeDiffComputerResult>;
}
export interface IMergeDiffComputerResult {
    diffs: DetailedLineRangeMapping[] | null;
}
export declare class MergeDiffComputer implements IMergeDiffComputer {
    private readonly editorWorkerService;
    private readonly configurationService;
    private readonly mergeAlgorithm;
    constructor(editorWorkerService: IEditorWorkerService, configurationService: IConfigurationService);
    computeDiff(textModel1: ITextModel, textModel2: ITextModel, reader: IReader): Promise<IMergeDiffComputerResult>;
}
export declare function toLineRange(range: DiffLineRange): LineRange;
export declare function toRangeMapping(mapping: DiffRangeMapping): RangeMapping;
