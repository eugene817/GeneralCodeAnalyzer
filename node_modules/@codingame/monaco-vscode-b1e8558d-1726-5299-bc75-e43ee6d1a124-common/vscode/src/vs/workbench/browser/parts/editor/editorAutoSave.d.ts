import { IWorkbenchContribution } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/contributions";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IFilesConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/filesConfiguration/common/filesConfigurationService.service";
import { IHostService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/host/browser/host.service";
import { IEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorService.service";
import { IEditorGroupsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorGroupsService.service";
import { IWorkingCopyService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/workingCopy/common/workingCopyService.service";
import { ILogService } from "@codingame/monaco-vscode-api/vscode/vs/platform/log/common/log.service";
import { IMarkerService } from "@codingame/monaco-vscode-api/vscode/vs/platform/markers/common/markers.service";
import { IUriIdentityService } from "@codingame/monaco-vscode-api/vscode/vs/platform/uriIdentity/common/uriIdentity.service";
export declare class EditorAutoSave extends Disposable implements IWorkbenchContribution {
    private readonly filesConfigurationService;
    private readonly hostService;
    private readonly editorService;
    private readonly editorGroupService;
    private readonly workingCopyService;
    private readonly logService;
    private readonly markerService;
    private readonly uriIdentityService;
    static readonly ID = "workbench.contrib.editorAutoSave";
    private readonly scheduledAutoSavesAfterDelay;
    private lastActiveEditor;
    private lastActiveGroupId;
    private readonly lastActiveEditorControlDisposable;
    private readonly waitingOnConditionAutoSaveWorkingCopies;
    private readonly waitingOnConditionAutoSaveEditors;
    constructor(filesConfigurationService: IFilesConfigurationService, hostService: IHostService, editorService: IEditorService, editorGroupService: IEditorGroupsService, workingCopyService: IWorkingCopyService, logService: ILogService, markerService: IMarkerService, uriIdentityService: IUriIdentityService);
    private registerListeners;
    private onConditionChanged;
    private onWindowFocusChange;
    private onActiveWindowChange;
    private onDidActiveEditorChange;
    private maybeTriggerAutoSave;
    private onDidChangeAutoSaveConfiguration;
    private saveAllDirtyAutoSaveables;
    private onDidRegister;
    private onDidUnregister;
    private onDidChangeDirty;
    private onDidChangeContent;
    private scheduleAutoSave;
    private discardAutoSave;
}
