import * as nls from "@codingame/monaco-vscode-api/vscode/vs/nls";
import { Action } from "@codingame/monaco-vscode-api/vscode/vs/base/common/actions";
import { ILoggerService } from "@codingame/monaco-vscode-api/vscode/vs/platform/log/common/log.service";
import { IQuickInputService } from "@codingame/monaco-vscode-api/vscode/vs/platform/quickinput/common/quickInput.service";
import { IFileService } from "@codingame/monaco-vscode-api/vscode/vs/platform/files/common/files.service";
import { IWorkbenchEnvironmentService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/environment/common/environmentService.service";
import { IEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorService.service";
import { IOutputService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/output/common/output.service";
import { IDefaultLogLevelsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/logs/common/defaultLogLevels.service";
export declare class SetLogLevelAction extends Action {
    private readonly quickInputService;
    private readonly loggerService;
    private readonly outputService;
    private readonly defaultLogLevelsService;
    static readonly ID = "workbench.action.setLogLevel";
    static readonly TITLE: nls.ILocalizedString;
    constructor(id: string, label: string, quickInputService: IQuickInputService, loggerService: ILoggerService, outputService: IOutputService, defaultLogLevelsService: IDefaultLogLevelsService);
    run(): Promise<void>;
    private selectLogLevelOrChannel;
    private setLogLevelForChannel;
    private getLogLevelEntries;
    private getLabel;
    private getDescription;
}
export declare class OpenWindowSessionLogFileAction extends Action {
    private readonly environmentService;
    private readonly fileService;
    private readonly quickInputService;
    private readonly editorService;
    static readonly ID = "workbench.action.openSessionLogFile";
    static readonly TITLE: nls.ILocalizedString;
    constructor(id: string, label: string, environmentService: IWorkbenchEnvironmentService, fileService: IFileService, quickInputService: IQuickInputService, editorService: IEditorService);
    run(): Promise<void>;
    private getSessions;
    private getLogFiles;
}
