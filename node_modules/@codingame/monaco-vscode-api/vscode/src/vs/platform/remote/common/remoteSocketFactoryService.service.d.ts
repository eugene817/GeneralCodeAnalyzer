import { IDisposable } from "../../../base/common/lifecycle.js";
import { ISocket } from "@codingame/monaco-vscode-bd6ad8b7-9db3-51a8-9895-0046508c029d-common/vscode/vs/base/parts/ipc/common/ipc.net";
import { RemoteConnectionType, RemoteConnection } from "./remoteAuthorityResolver.js";
import { ISocketFactory } from "@codingame/monaco-vscode-remote-agent-service-override/vscode/vs/platform/remote/common/remoteSocketFactoryService";
export declare const IRemoteSocketFactoryService: import("../../instantiation/common/instantiation.js").ServiceIdentifier<IRemoteSocketFactoryService>;
export interface IRemoteSocketFactoryService {
    readonly _serviceBrand: undefined;
    register<T extends RemoteConnectionType>(type: T, factory: ISocketFactory<T>): IDisposable;
    connect(connectTo: RemoteConnection, path: string, query: string, debugLabel: string): Promise<ISocket>;
}
