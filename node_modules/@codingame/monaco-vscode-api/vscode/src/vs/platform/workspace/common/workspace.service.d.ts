import { Event } from "../../../base/common/event.js";
import { URI } from "../../../base/common/uri.js";
import { WorkbenchState, IWorkspaceFoldersWillChangeEvent, IWorkspaceFoldersChangeEvent, IWorkspace, IWorkspaceFolder, IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from "./workspace.js";
export declare const IWorkspaceContextService: import("../../instantiation/common/instantiation.js").ServiceIdentifier<IWorkspaceContextService>;
export interface IWorkspaceContextService {
    readonly _serviceBrand: undefined;
    readonly onDidChangeWorkbenchState: Event<WorkbenchState>;
    readonly onDidChangeWorkspaceName: Event<void>;
    readonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent>;
    readonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;
    getCompleteWorkspace(): Promise<IWorkspace>;
    getWorkspace(): IWorkspace;
    getWorkbenchState(): WorkbenchState;
    getWorkspaceFolder(resource: URI): IWorkspaceFolder | null;
    isCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean;
    isInsideWorkspace(resource: URI): boolean;
}
