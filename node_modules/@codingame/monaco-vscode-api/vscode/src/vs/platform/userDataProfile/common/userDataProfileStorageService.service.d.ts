import { Event } from "../../../base/common/event.js";
import { StorageTarget } from "../../storage/common/storage.js";
import { IStorageService } from "../../storage/common/storage.service.js";
import { IUserDataProfile } from "./userDataProfile.js";
import { IProfileStorageChanges, IStorageValue } from "@codingame/monaco-vscode-user-data-profile-service-override/vscode/vs/platform/userDataProfile/common/userDataProfileStorageService";
export declare const IUserDataProfileStorageService: import("../../instantiation/common/instantiation.js").ServiceIdentifier<IUserDataProfileStorageService>;
export interface IUserDataProfileStorageService {
    readonly _serviceBrand: undefined;
    readonly onDidChange: Event<IProfileStorageChanges>;
    readStorageData(profile: IUserDataProfile): Promise<Map<string, IStorageValue>>;
    updateStorageData(profile: IUserDataProfile, data: Map<string, string | undefined | null>, target: StorageTarget): Promise<void>;
    withProfileScopedStorageService<T>(profile: IUserDataProfile, fn: (storageService: IStorageService) => Promise<T>): Promise<T>;
}
