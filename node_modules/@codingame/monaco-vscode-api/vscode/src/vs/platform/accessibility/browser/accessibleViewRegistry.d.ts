import { IDisposable } from "../../../base/common/lifecycle.js";
import { AccessibleViewType, AccessibleContentProvider, ExtensionContentProvider } from "./accessibleView.js";
import { ContextKeyExpression } from "../../contextkey/common/contextkey.js";
import { ServicesAccessor } from "../../instantiation/common/instantiation.js";
export interface IAccessibleViewImplementation {
    type: AccessibleViewType;
    priority: number;
    name: string;
    getProvider: (accessor: ServicesAccessor) => AccessibleContentProvider | ExtensionContentProvider | undefined;
    when?: ContextKeyExpression | undefined;
}
export declare const AccessibleViewRegistry: {
    _implementations: IAccessibleViewImplementation[];
    register(implementation: IAccessibleViewImplementation): IDisposable;
    getImplementations(): IAccessibleViewImplementation[];
};
