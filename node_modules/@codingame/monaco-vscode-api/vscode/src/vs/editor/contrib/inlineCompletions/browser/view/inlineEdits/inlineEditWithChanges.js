
import { SingleLineEdit } from '../../../../../common/core/lineEdit.js';

class InlineEditWithChanges {
    constructor(originalText, edit, cursorPosition, userJumpedToIt, commands, inlineCompletion) {
        this.originalText = originalText;
        this.edit = edit;
        this.cursorPosition = cursorPosition;
        this.userJumpedToIt = userJumpedToIt;
        this.commands = commands;
        this.inlineCompletion = inlineCompletion;
        this.lineEdit = SingleLineEdit.fromSingleTextEdit(this.edit.toSingle(this.originalText), this.originalText);
        this.originalLineRange = this.lineEdit.lineRange;
        this.modifiedLineRange = this.lineEdit.toLineEdit().getNewLineRanges()[0];
    }
    equals(other) {
        return this.originalText.getValue() === other.originalText.getValue() &&
            this.edit.equals(other.edit) &&
            this.cursorPosition.equals(other.cursorPosition) &&
            this.userJumpedToIt === other.userJumpedToIt &&
            this.commands === other.commands &&
            this.inlineCompletion === other.inlineCompletion;
    }
}

export { InlineEditWithChanges };
