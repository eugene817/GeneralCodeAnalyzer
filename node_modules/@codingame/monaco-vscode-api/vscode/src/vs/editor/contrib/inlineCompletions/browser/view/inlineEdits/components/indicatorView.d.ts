import { Disposable } from "../../../../../../../base/common/lifecycle.js";
import { IObservable } from "../../../../../../../base/common/observable.js";
import { ObservableCodeEditor } from "../../../../../../browser/observableCodeEditor.js";
import { InlineCompletionsModel } from "../../../model/inlineCompletionsModel.js";
export interface IInlineEditsIndicatorState {
    editTop: number;
    showAlways: boolean;
}
export declare const inlineEditIndicatorForeground: string;
export declare const inlineEditIndicatorBackground: string;
export declare const inlineEditIndicatorBorder: string;
export declare class InlineEditsIndicator extends Disposable {
    private readonly _editorObs;
    private readonly _state;
    private readonly _model;
    private readonly _indicator;
    isHoverVisible: IObservable<boolean>;
    constructor(_editorObs: ObservableCodeEditor, _state: IObservable<IInlineEditsIndicatorState | undefined>, _model: IObservable<InlineCompletionsModel | undefined>);
}
