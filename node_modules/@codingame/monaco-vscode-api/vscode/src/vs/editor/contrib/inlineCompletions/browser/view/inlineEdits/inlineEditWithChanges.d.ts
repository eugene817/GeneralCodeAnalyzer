import { SingleLineEdit } from "../../../../../common/core/lineEdit.js";
import { Position } from "../../../../../common/core/position.js";
import { AbstractText, TextEdit } from "../../../../../common/core/textEdit.js";
import { Command } from "../../../../../common/languages.js";
import { InlineCompletionItem } from "../../model/provideInlineCompletions.js";
export declare class InlineEditWithChanges {
    readonly originalText: AbstractText;
    readonly edit: TextEdit;
    readonly cursorPosition: Position;
    readonly userJumpedToIt: boolean;
    readonly commands: readonly Command[];
    readonly inlineCompletion: InlineCompletionItem;
    readonly lineEdit: SingleLineEdit;
    readonly originalLineRange: import("../../../../../common/core/lineRange.js").LineRange;
    readonly modifiedLineRange: import("../../../../../common/core/lineRange.js").LineRange;
    constructor(originalText: AbstractText, edit: TextEdit, cursorPosition: Position, userJumpedToIt: boolean, commands: readonly Command[], inlineCompletion: InlineCompletionItem);
    equals(other: InlineEditWithChanges): boolean;
}
