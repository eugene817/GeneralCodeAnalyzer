import { IMouseEvent } from "../../../../../../../base/browser/mouseEvent.js";
import { Disposable } from "../../../../../../../base/common/lifecycle.js";
import { IObservable, IReader } from "../../../../../../../base/common/observable.js";
import { IInstantiationService } from "../../../../../../../platform/instantiation/common/instantiation.js";
import { IThemeService } from "../../../../../../../platform/theme/common/themeService.service.js";
import { ICodeEditor } from "../../../../../../browser/editorBrowser.js";
import { EmbeddedCodeEditorWidget } from "../../../../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js";
import { LineRange } from "../../../../../../common/core/lineRange.js";
import { ITextModel } from "../../../../../../common/model.js";
import { IInlineEditsView, IInlineEditsViewHost } from "../inlineEditsViewInterface.js";
import { InlineEditWithChanges } from "../inlineEditWithChanges.js";
export declare class InlineEditsSideBySideView extends Disposable implements IInlineEditsView {
    private readonly _editor;
    private readonly _edit;
    private readonly _previewTextModel;
    private readonly _uiState;
    private readonly _host;
    private readonly _instantiationService;
    private readonly _themeService;
    static fitsInsideViewport(editor: ICodeEditor, edit: InlineEditWithChanges, originalDisplayRange: LineRange, reader: IReader): boolean;
    private readonly _editorObs;
    private readonly _onDidClick;
    readonly onDidClick: import("../../../../../../../base/common/event.js").Event<IMouseEvent>;
    constructor(_editor: ICodeEditor, _edit: IObservable<InlineEditWithChanges | undefined>, _previewTextModel: ITextModel, _uiState: IObservable<{
        edit: InlineEditWithChanges;
        newTextLineCount: number;
        originalDisplayRange: LineRange;
    } | undefined>, _host: IInlineEditsViewHost, _instantiationService: IInstantiationService, _themeService: IThemeService);
    private readonly _display;
    private readonly previewRef;
    private readonly _editorContainer;
    readonly isHovered: IObservable<boolean>;
    readonly previewEditor: EmbeddedCodeEditorWidget;
    private readonly _previewEditorObs;
    private _activeViewZones;
    private readonly _updatePreviewEditor;
    private readonly _previewEditorWidth;
    private readonly _cursorPosIfTouchesEdit;
    private readonly _originalStartPosition;
    private readonly _originalEndPosition;
    private readonly _originalVerticalStartPosition;
    private readonly _originalVerticalEndPosition;
    private readonly _originalDisplayRange;
    private readonly _editorMaxContentWidthInRange;
    private readonly _previewEditorLayoutInfo;
    private _stickyScrollController;
    private readonly _stickyScrollHeight;
    private readonly _shouldOverflow;
    private readonly _extendedModifiedPath;
    private readonly _originalBackgroundColor;
    private readonly _backgroundSvg;
    private readonly _modifiedBackgroundSvg;
    private readonly _foregroundBackgroundSvg;
    private readonly _middleBorderWithShadow;
    private readonly _foregroundSvg;
    private readonly _nonOverflowView;
    private readonly _overflowView;
}
