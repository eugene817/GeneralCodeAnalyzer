import { IMouseEvent } from "../../../../../../../base/browser/mouseEvent.js";
import { Disposable } from "../../../../../../../base/common/lifecycle.js";
import { IObservable } from "../../../../../../../base/common/observable.js";
import { ICodeEditor } from "../../../../../../browser/editorBrowser.js";
import { LineRange } from "../../../../../../common/core/lineRange.js";
import { Range } from "../../../../../../common/core/range.js";
import { IInlineEditsView, IInlineEditsViewHost } from "../inlineEditsViewInterface.js";
import { InlineEditWithChanges } from "../inlineEditWithChanges.js";
export declare class InlineEditsDeletionView extends Disposable implements IInlineEditsView {
    private readonly _editor;
    private readonly _edit;
    private readonly _uiState;
    private readonly _host;
    private readonly _editorObs;
    private readonly _onDidClick;
    readonly onDidClick: import("../../../../../../../base/common/event.js").Event<IMouseEvent>;
    constructor(_editor: ICodeEditor, _edit: IObservable<InlineEditWithChanges | undefined>, _uiState: IObservable<{
        originalRange: LineRange;
        deletions: Range[];
    } | undefined>, _host: IInlineEditsViewHost);
    private readonly _display;
    private readonly _originalStartPosition;
    private readonly _originalEndPosition;
    private readonly _originalVerticalStartPosition;
    private readonly _originalVerticalEndPosition;
    private readonly _originalDisplayRange;
    private readonly _editorMaxContentWidthInRange;
    private readonly _maxPrefixTrim;
    private readonly _editorLayoutInfo;
    private readonly _foregroundSvg;
    private readonly _nonOverflowView;
    readonly isHovered: IObservable<boolean>;
}
