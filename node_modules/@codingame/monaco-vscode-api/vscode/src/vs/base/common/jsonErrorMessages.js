
import { localize } from '../../nls.js';
import { ParseErrorCode } from './json.js';

function getParseErrorMessage(errorCode) {
    switch (errorCode) {
        case ParseErrorCode.InvalidSymbol: return localize(109, 'Invalid symbol');
        case ParseErrorCode.InvalidNumberFormat: return localize(110, 'Invalid number format');
        case ParseErrorCode.PropertyNameExpected: return localize(111, 'Property name expected');
        case ParseErrorCode.ValueExpected: return localize(112, 'Value expected');
        case ParseErrorCode.ColonExpected: return localize(113, 'Colon expected');
        case ParseErrorCode.CommaExpected: return localize(114, 'Comma expected');
        case ParseErrorCode.CloseBraceExpected: return localize(115, 'Closing brace expected');
        case ParseErrorCode.CloseBracketExpected: return localize(116, 'Closing bracket expected');
        case ParseErrorCode.EndOfFileExpected: return localize(117, 'End of file expected');
        default:
            return '';
    }
}

export { getParseErrorMessage };
