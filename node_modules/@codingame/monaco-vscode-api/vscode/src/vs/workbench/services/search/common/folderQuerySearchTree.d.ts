import { URI } from "../../../../base/common/uri.js";
import { IFolderQuery } from "./search.js";
import { TernarySearchTree } from "../../../../base/common/ternarySearchTree.js";
export declare class FolderQuerySearchTree<FolderQueryInfo extends {
    folder: URI;
}> extends TernarySearchTree<URI, Map<string, FolderQueryInfo>> {
    constructor(folderQueries: IFolderQuery<URI>[], getFolderQueryInfo: (fq: IFolderQuery, i: number) => FolderQueryInfo, ignorePathCasing?: (key: URI) => boolean);
    findQueryFragmentAwareSubstr(key: URI): FolderQueryInfo | undefined;
    forEachFolderQueryInfo(fn: (folderQueryInfo: FolderQueryInfo) => void): void;
    private encodeKey;
}
