import { GroupIdentifier, ISaveOptions, IRevertOptions, IUntypedEditorInput } from "../../../common/editor.js";
import { EditorInput } from "../../../common/editor/editorInput.js";
import { IEditorGroup } from "./editorGroupsService.js";
import { IGroupModelChangeEvent } from "@codingame/monaco-vscode-ad89fae6-94f0-5ac2-a185-22dea4b68ee0-common/vscode/vs/workbench/common/editor/editorGroupModel";
export declare const ACTIVE_GROUP = -1;
export type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;
export declare const SIDE_GROUP = -2;
export type SIDE_GROUP_TYPE = typeof SIDE_GROUP;
export declare const AUX_WINDOW_GROUP = -3;
export type AUX_WINDOW_GROUP_TYPE = typeof AUX_WINDOW_GROUP;
export type PreferredGroup = IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE | AUX_WINDOW_GROUP_TYPE;
export declare function isPreferredGroup(obj: unknown): obj is PreferredGroup;
export interface ISaveEditorsOptions extends ISaveOptions {
    readonly saveAs?: boolean;
}
export interface ISaveEditorsResult {
    readonly success: boolean;
    readonly editors: Array<EditorInput | IUntypedEditorInput>;
}
export interface IUntypedEditorReplacement {
    readonly editor: EditorInput;
    readonly replacement: IUntypedEditorInput;
    forceReplaceDirty?: boolean;
}
export interface IBaseSaveRevertAllEditorOptions {
    readonly includeUntitled?: {
        readonly includeScratchpad: boolean;
    } | boolean;
    readonly excludeSticky?: boolean;
}
export interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions {
}
export interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions {
}
export interface IOpenEditorsOptions {
    readonly validateTrust?: boolean;
}
export interface IEditorsChangeEvent {
    groupId: GroupIdentifier;
    event: IGroupModelChangeEvent;
}
