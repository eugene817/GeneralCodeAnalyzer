import { Event } from "../../../../base/common/event.js";
import { URI } from "../../../../base/common/uri.js";
import { IUntitledTextEditorModel } from "@codingame/monaco-vscode-0c06bfba-d24d-5c4d-90cd-b40cefb7f811-common/vscode/vs/workbench/services/untitled/common/untitledTextEditorModel";
import { IUntitledTextEditorModelSaveEvent, INewUntitledTextEditorOptions, INewUntitledTextEditorWithAssociatedResourceOptions, IExistingUntitledTextEditorOptions } from "@codingame/monaco-vscode-view-common-service-override/vscode/vs/workbench/services/untitled/common/untitledTextEditorService";
export declare const IUntitledTextEditorService: import("../../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<IUntitledTextEditorService>;
export interface IUntitledTextEditorService {
    readonly _serviceBrand: undefined;
    readonly onDidSave: Event<IUntitledTextEditorModelSaveEvent>;
    readonly onDidChangeDirty: Event<IUntitledTextEditorModel>;
    readonly onDidChangeEncoding: Event<IUntitledTextEditorModel>;
    readonly onDidChangeLabel: Event<IUntitledTextEditorModel>;
    readonly onDidCreate: Event<IUntitledTextEditorModel>;
    readonly onWillDispose: Event<IUntitledTextEditorModel>;
    create(options?: INewUntitledTextEditorOptions): IUntitledTextEditorModel;
    create(options?: INewUntitledTextEditorWithAssociatedResourceOptions): IUntitledTextEditorModel;
    create(options?: IExistingUntitledTextEditorOptions): IUntitledTextEditorModel;
    get(resource: URI): IUntitledTextEditorModel | undefined;
    getValue(resource: URI): string | undefined;
    resolve(options?: INewUntitledTextEditorOptions): Promise<IUntitledTextEditorModel>;
    resolve(options?: INewUntitledTextEditorWithAssociatedResourceOptions): Promise<IUntitledTextEditorModel>;
    resolve(options?: IExistingUntitledTextEditorOptions): Promise<IUntitledTextEditorModel>;
    isUntitledWithAssociatedResource(resource: URI): boolean;
    canDispose(model: IUntitledTextEditorModel): true | Promise<true>;
}
