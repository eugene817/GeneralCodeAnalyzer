import { Event } from "../../../../base/common/event.js";
export declare const INTERNAL_AUTH_PROVIDER_PREFIX = "__";
export interface AuthenticationSessionAccount {
    label: string;
    id: string;
}
export interface AuthenticationSession {
    id: string;
    accessToken: string;
    account: AuthenticationSessionAccount;
    scopes: ReadonlyArray<string>;
    idToken?: string;
}
export interface AuthenticationSessionsChangeEvent {
    added: ReadonlyArray<AuthenticationSession> | undefined;
    removed: ReadonlyArray<AuthenticationSession> | undefined;
    changed: ReadonlyArray<AuthenticationSession> | undefined;
}
export interface AuthenticationProviderInformation {
    id: string;
    label: string;
}
export interface IAuthenticationCreateSessionOptions {
    activateImmediate?: boolean;
    account?: AuthenticationSessionAccount;
}
export interface AllowedExtension {
    id: string;
    name: string;
    allowed?: boolean;
    lastUsed?: number;
    trusted?: boolean;
}
export interface IAuthenticationProviderSessionOptions {
    account?: AuthenticationSessionAccount;
}
export interface IAuthenticationProvider {
    readonly id: string;
    readonly label: string;
    readonly supportsMultipleAccounts: boolean;
    readonly onDidChangeSessions: Event<AuthenticationSessionsChangeEvent>;
    getSessions(scopes: string[] | undefined, options: IAuthenticationProviderSessionOptions): Promise<readonly AuthenticationSession[]>;
    createSession(scopes: string[], options: IAuthenticationProviderSessionOptions): Promise<AuthenticationSession>;
    removeSession(sessionId: string): Promise<void>;
}
