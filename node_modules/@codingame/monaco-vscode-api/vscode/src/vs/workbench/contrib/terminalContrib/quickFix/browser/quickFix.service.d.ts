import { Event } from "../../../../../base/common/event.js";
import { IDisposable } from "../../../../../base/common/lifecycle.js";
import { ITerminalCommandSelector } from "../../../../../platform/terminal/common/terminal.js";
import { ITerminalQuickFixProviderSelector, ITerminalQuickFixProvider } from "@codingame/monaco-vscode-42931eb9-e564-530c-bafc-fa23ab43a070-common/vscode/vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix";
export declare const ITerminalQuickFixService: import("../../../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<ITerminalQuickFixService>;
export interface ITerminalQuickFixService {
    onDidRegisterProvider: Event<ITerminalQuickFixProviderSelector>;
    onDidRegisterCommandSelector: Event<ITerminalCommandSelector>;
    onDidUnregisterProvider: Event<string>;
    readonly _serviceBrand: undefined;
    readonly extensionQuickFixes: Promise<Array<ITerminalCommandSelector>>;
    providers: Map<string, ITerminalQuickFixProvider>;
    registerQuickFixProvider(id: string, provider: ITerminalQuickFixProvider): IDisposable;
    registerCommandSelector(selector: ITerminalCommandSelector): void;
}
