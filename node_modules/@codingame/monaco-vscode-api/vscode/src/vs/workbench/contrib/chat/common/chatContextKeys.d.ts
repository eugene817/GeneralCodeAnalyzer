import { RawContextKey } from "../../../../platform/contextkey/common/contextkey.js";
import { ChatAgentLocation } from "./chatAgents.js";
export declare namespace ChatContextKeys {
    const responseVote: RawContextKey<string>;
    const responseDetectedAgentCommand: RawContextKey<boolean>;
    const responseSupportsIssueReporting: RawContextKey<boolean>;
    const responseIsFiltered: RawContextKey<boolean>;
    const responseHasError: RawContextKey<boolean>;
    const requestInProgress: RawContextKey<boolean>;
    const isRequestPaused: RawContextKey<boolean>;
    const canRequestBePaused: RawContextKey<boolean>;
    const isResponse: RawContextKey<boolean>;
    const isRequest: RawContextKey<boolean>;
    const itemId: RawContextKey<string>;
    const lastItemId: RawContextKey<string[]>;
    const editApplied: RawContextKey<boolean>;
    const inputHasText: RawContextKey<boolean>;
    const inputHasFocus: RawContextKey<boolean>;
    const inChatInput: RawContextKey<boolean>;
    const inChatSession: RawContextKey<boolean>;
    const instructionsAttached: RawContextKey<boolean>;
    const supported: import("../../../../platform/contextkey/common/contextkey.js").ContextKeyExpression | undefined;
    const enabled: RawContextKey<boolean>;
    const panelParticipantRegistered: RawContextKey<boolean>;
    const editingParticipantRegistered: RawContextKey<boolean>;
    const chatEditingCanUndo: RawContextKey<boolean>;
    const chatEditingCanRedo: RawContextKey<boolean>;
    const extensionInvalid: RawContextKey<boolean>;
    const inputCursorAtTop: RawContextKey<boolean>;
    const inputHasAgent: RawContextKey<boolean>;
    const location: RawContextKey<ChatAgentLocation>;
    const inQuickChat: RawContextKey<boolean>;
    const hasFileAttachments: RawContextKey<boolean>;
    const languageModelsAreUserSelectable: RawContextKey<boolean>;
    const Setup: {
        signedOut: RawContextKey<boolean>;
        hidden: RawContextKey<boolean>;
        installed: RawContextKey<boolean>;
        canSignUp: RawContextKey<boolean>;
        limited: RawContextKey<boolean>;
        pro: RawContextKey<boolean>;
    };
    const SetupViewKeys: Set<string>;
    const SetupViewCondition: import("../../../../platform/contextkey/common/contextkey.js").ContextKeyExpression;
    const chatQuotaExceeded: RawContextKey<boolean>;
    const completionsQuotaExceeded: RawContextKey<boolean>;
    const Editing: {
        hasToolsAgent: RawContextKey<boolean>;
        agentMode: RawContextKey<boolean>;
        agentModeDisallowed: RawContextKey<boolean>;
        hasToolConfirmation: RawContextKey<boolean>;
    };
}
