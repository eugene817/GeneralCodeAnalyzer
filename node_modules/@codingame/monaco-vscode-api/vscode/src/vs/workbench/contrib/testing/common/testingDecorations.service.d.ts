import { Event } from "../../../../base/common/event.js";
import { URI } from "../../../../base/common/uri.js";
import { Position } from "../../../../editor/common/core/position.js";
import { ITestDecoration } from "@codingame/monaco-vscode-testing-service-override/vscode/vs/workbench/contrib/testing/common/testingDecorations";
import { ITestMessage } from "./testTypes.js";
export declare const ITestingDecorationsService: import("../../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<ITestingDecorationsService>;
export interface ITestingDecorationsService {
    _serviceBrand: undefined;
    onDidChange: Event<void>;
    invalidateResultMessage(message: ITestMessage): void;
    syncDecorations(resource: URI): Iterable<ITestDecoration> & {
        readonly size: number;
        getById(decorationId: string): ITestDecoration | undefined;
    };
    getDecoratedTestPosition(resource: URI, testId: string): Position | undefined;
    updateDecorationsAlternateAction(resource: URI, isAlt: boolean): void;
}
