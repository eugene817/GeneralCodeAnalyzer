import { URI } from "../../../../../../base/common/uri.js";
import { ParseError } from "@codingame/monaco-vscode-9a6d8b6c-ad4c-5ea3-9558-f43d6dc4c0ad-common/vscode/vs/workbench/contrib/chat/common/promptFileReferenceErrors";
import { IDisposable } from "../../../../../../base/common/lifecycle.js";
import { IRange, Range } from "../../../../../../editor/common/core/range.js";
export interface IResolveError {
    message: string;
    isRootError: boolean;
}
type PromptReferenceTypes = "file";
export interface IPromptReference extends IDisposable {
    readonly type: PromptReferenceTypes;
    readonly uri: URI;
    readonly range: Range;
    readonly linkRange: IRange | undefined;
    readonly text: string;
    readonly path: string;
    readonly isPromptSnippet: boolean;
    readonly resolveFailed: boolean | undefined;
    readonly errorCondition: ParseError | undefined;
    readonly allErrors: readonly ParseError[];
    readonly topError: IResolveError | undefined;
    references: readonly IPromptReference[];
    allReferences: readonly IPromptReference[];
    allValidReferences: readonly IPromptReference[];
    settled(): Promise<this>;
    allSettled(): Promise<this>;
}
export interface IPromptFileReference extends IPromptReference {
    readonly type: "file";
}
