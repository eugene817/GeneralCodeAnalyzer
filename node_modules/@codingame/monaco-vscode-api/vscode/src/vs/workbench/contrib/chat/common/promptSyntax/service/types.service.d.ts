import { IDisposable } from "../../../../../../base/common/lifecycle.js";
import { ITextModel } from "../../../../../../editor/common/model.js";
import { TextModelPromptParser } from "@codingame/monaco-vscode-chat-service-override/vscode/vs/workbench/contrib/chat/common/promptSyntax/parsers/textModelPromptParser";
import { IPromptPath, TPromptsType } from "./types.js";
export declare const IPromptsService: import("../../../../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<IPromptsService>;
export interface IPromptsService extends IDisposable {
    readonly _serviceBrand: undefined;
    getSyntaxParserFor(model: ITextModel): TextModelPromptParser & {
        disposed: false;
    };
    listPromptFiles(): Promise<readonly IPromptPath[]>;
    getSourceFolders(type: TPromptsType): readonly IPromptPath[];
}
