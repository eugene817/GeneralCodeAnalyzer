import { Event } from "../../../../base/common/event.js";
import { TestResultItemChange, ITestResult, LiveTestResult } from "@codingame/monaco-vscode-6845754f-e617-5ed9-8aaa-6ca3653a9532-common/vscode/vs/workbench/contrib/testing/common/testResult";
import { ResultChangeEvent } from "@codingame/monaco-vscode-testing-service-override/vscode/vs/workbench/contrib/testing/common/testResultService";
import { ResolvedTestRunRequest, ExtensionRunTestsRequest, TestResultItem } from "./testTypes.js";
export declare const ITestResultService: import("../../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<ITestResultService>;
export interface ITestResultService {
    readonly _serviceBrand: undefined;
    readonly onResultsChanged: Event<ResultChangeEvent>;
    readonly onTestChanged: Event<TestResultItemChange>;
    readonly results: ReadonlyArray<ITestResult>;
    clear(): void;
    createLiveResult(req: ResolvedTestRunRequest | ExtensionRunTestsRequest): LiveTestResult;
    push<T extends ITestResult>(result: T): T;
    getResult(resultId: string): ITestResult | undefined;
    getStateById(extId: string): [
        results: ITestResult,
        item: TestResultItem
    ] | undefined;
}
