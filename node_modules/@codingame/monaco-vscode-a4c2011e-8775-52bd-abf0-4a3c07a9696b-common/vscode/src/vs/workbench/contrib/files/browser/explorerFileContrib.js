
import { Emitter } from '@codingame/monaco-vscode-api/vscode/vs/base/common/event';
import { Registry } from '@codingame/monaco-vscode-api/vscode/vs/platform/registry/common/platform';

var ExplorerExtensions;
(function (ExplorerExtensions) {
    ExplorerExtensions["FileContributionRegistry"] = "workbench.registry.explorer.fileContributions";
})(ExplorerExtensions || (ExplorerExtensions = {}));
class ExplorerFileContributionRegistry {
    constructor() {
        this._onDidRegisterDescriptor = ( new Emitter());
        this.onDidRegisterDescriptor = this._onDidRegisterDescriptor.event;
        this.descriptors = [];
    }
    register(descriptor) {
        this.descriptors.push(descriptor);
        this._onDidRegisterDescriptor.fire(descriptor);
    }
    create(insta, container, store) {
        return ( this.descriptors.map(d => {
            const i = d.create(insta, container);
            store.add(i);
            return i;
        }));
    }
}
const explorerFileContribRegistry = ( new ExplorerFileContributionRegistry());
Registry.add(ExplorerExtensions.FileContributionRegistry, explorerFileContribRegistry);

export { ExplorerExtensions, explorerFileContribRegistry };
