import { DisposableStore, IDisposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
export declare enum ExplorerExtensions {
    FileContributionRegistry = "workbench.registry.explorer.fileContributions"
}
export interface IExplorerFileContribution extends IDisposable {
    setResource(resource: URI | undefined): void;
}
export interface IExplorerFileContributionDescriptor {
    create(insta: IInstantiationService, container: HTMLElement): IExplorerFileContribution;
}
export interface IExplorerFileContributionRegistry {
    register(descriptor: IExplorerFileContributionDescriptor): void;
}
declare class ExplorerFileContributionRegistry implements IExplorerFileContributionRegistry {
    private readonly _onDidRegisterDescriptor;
    readonly onDidRegisterDescriptor: import("@codingame/monaco-vscode-api/vscode/vs/base/common/event").Event<IExplorerFileContributionDescriptor>;
    private readonly descriptors;
    register(descriptor: IExplorerFileContributionDescriptor): void;
    create(insta: IInstantiationService, container: HTMLElement, store: DisposableStore): IExplorerFileContribution[];
}
export declare const explorerFileContribRegistry: ExplorerFileContributionRegistry;
export {};
