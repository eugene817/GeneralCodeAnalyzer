import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IAnyWorkspaceIdentifier } from "@codingame/monaco-vscode-api/vscode/vs/platform/workspace/common/workspace";
import { RestrictedSettings } from "@codingame/monaco-vscode-b1249c5b-1339-5278-b002-746f08105c6d-common/vscode/vs/workbench/services/configuration/common/configuration";
export declare const IWorkbenchConfigurationService: import("@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation").ServiceIdentifier<IWorkbenchConfigurationService>;
export interface IWorkbenchConfigurationService extends IConfigurationService {
    readonly restrictedSettings: RestrictedSettings;
    readonly onDidChangeRestrictedSettings: Event<RestrictedSettings>;
    whenRemoteConfigurationLoaded(): Promise<void>;
    initialize(arg: IAnyWorkspaceIdentifier): Promise<void>;
    isSettingAppliedForAllProfiles(setting: string): boolean;
}
