
import { Emitter } from '@codingame/monaco-vscode-api/vscode/vs/base/common/event';
import { Disposable } from '@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle';

class EditorModel extends Disposable {
    constructor() {
        super(...arguments);
        this._onWillDispose = this._register(( new Emitter()));
        this.onWillDispose = this._onWillDispose.event;
        this.resolved = false;
    }
    async resolve() {
        this.resolved = true;
    }
    isResolved() {
        return this.resolved;
    }
    isDisposed() {
        return this._store.isDisposed;
    }
    dispose() {
        this._onWillDispose.fire();
        super.dispose();
    }
}

export { EditorModel };
