import { CancellationToken } from "@codingame/monaco-vscode-api/vscode/vs/base/common/cancellation";
import { IDisposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IPosition } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/core/position";
import { AbstractEditorNavigationQuickAccessProvider, IQuickAccessTextEditorContext } from "@codingame/monaco-vscode-ea14e352-8f1c-5569-b79a-8a96a53e8abe-common/vscode/vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess";
import { IQuickPick, IQuickPickItem } from "@codingame/monaco-vscode-api/vscode/vs/platform/quickinput/common/quickInput";
interface IGotoLineQuickPickItem extends IQuickPickItem, Partial<IPosition> {
}
export declare abstract class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {
    static PREFIX: string;
    constructor();
    protected provideWithoutTextEditor(picker: IQuickPick<IGotoLineQuickPickItem, {
        useSeparators: true;
    }>): IDisposable;
    protected provideWithTextEditor(context: IQuickAccessTextEditorContext, picker: IQuickPick<IGotoLineQuickPickItem, {
        useSeparators: true;
    }>, token: CancellationToken): IDisposable;
    private toRange;
    private parsePosition;
    private getPickLabel;
    private isValidLineNumber;
    private isValidColumn;
    private lineCount;
}
export {};
