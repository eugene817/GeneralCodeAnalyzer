import { ICodeEditor } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/editorBrowser";
import { Position } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/core/position";
import { Range } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/core/range";
import { ZoneWidget } from "@codingame/monaco-vscode-api/vscode/vs/editor/contrib/zoneWidget/browser/zoneWidget";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { ILogService } from "@codingame/monaco-vscode-api/vscode/vs/platform/log/common/log.service";
import { IChatWidgetViewOptions } from "@codingame/monaco-vscode-9a6d8b6c-ad4c-5ea3-9558-f43d6dc4c0ad-common/vscode/vs/workbench/contrib/chat/browser/chat";
import { IChatWidgetLocationOptions } from "@codingame/monaco-vscode-9a6d8b6c-ad4c-5ea3-9558-f43d6dc4c0ad-common/vscode/vs/workbench/contrib/chat/browser/chatWidget";
import { EditorBasedInlineChatWidget } from "@codingame/monaco-vscode-9a6d8b6c-ad4c-5ea3-9558-f43d6dc4c0ad-common/vscode/vs/workbench/contrib/inlineChat/browser/inlineChatWidget";
export declare class InlineChatZoneWidget extends ZoneWidget {
    private readonly _instaService;
    private _logService;
    private static readonly _options;
    readonly widget: EditorBasedInlineChatWidget;
    private readonly _scrollUp;
    private readonly _ctxCursorPosition;
    private _dimension?;
    constructor(location: IChatWidgetLocationOptions, options: IChatWidgetViewOptions | undefined, editor: ICodeEditor, _instaService: IInstantiationService, _logService: ILogService, contextKeyService: IContextKeyService);
    protected _fillContainer(container: HTMLElement): void;
    protected _doLayout(heightInPixel: number): void;
    private _computeHeight;
    protected _getResizeBounds(): {
        minLines: number;
        maxLines: number;
    };
    protected _onWidth(_widthInPixel: number): void;
    show(position: Position): void;
    private _updatePadding;
    reveal(position: Position): void;
    updatePositionAndHeight(position: Position): void;
    private _createZoneAndScrollRestoreFn;
    protected revealRange(range: Range, isLastLine: boolean): void;
    hide(): void;
}
