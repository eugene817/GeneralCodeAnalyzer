import { ICodeEditor, IDiffEditor } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/editorBrowser";
import { IDiffEditorOptions, IEditorOptions as ICodeEditorOptions } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/config/editorOptions";
import { AbstractTextEditor, IEditorConfiguration } from "@codingame/monaco-vscode-12c5f9eb-72d3-57ca-babd-5bef7aa9de3b-common/vscode/vs/workbench/browser/parts/editor/textEditor";
import { ITextDiffEditorPane, IEditorOpenContext } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/editor";
import { EditorInput } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/editor/editorInput";
import { DiffEditorInput } from "@codingame/monaco-vscode-fdf643f9-94dd-5510-b97a-408abf26ad92-common/vscode/vs/workbench/common/editor/diffEditorInput";
import { ITelemetryService } from "@codingame/monaco-vscode-api/vscode/vs/platform/telemetry/common/telemetry.service";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { ITextResourceConfigurationChangeEvent } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/textResourceConfiguration";
import { ITextResourceConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/textResourceConfiguration.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { IDiffEditorViewState, IDiffEditorModel } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/editorCommon";
import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { IEditorGroup } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorGroupsService";
import { IEditorGroupsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorGroupsService.service";
import { IEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/editor/common/editorService.service";
import { CancellationToken } from "@codingame/monaco-vscode-api/vscode/vs/base/common/cancellation";
import { ITextEditorOptions } from "@codingame/monaco-vscode-api/vscode/vs/platform/editor/common/editor";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { Dimension } from "@codingame/monaco-vscode-api/vscode/vs/base/browser/dom";
import { IFileService } from "@codingame/monaco-vscode-api/vscode/vs/platform/files/common/files.service";
import { IBoundarySashes } from "@codingame/monaco-vscode-api/vscode/vs/base/browser/ui/sash/sash";
import { IPreferencesService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/preferences/common/preferences.service";
export declare class TextDiffEditor extends AbstractTextEditor<IDiffEditorViewState> implements ITextDiffEditorPane {
    private readonly preferencesService;
    static readonly ID = "workbench.editors.textDiffEditor";
    private diffEditorControl;
    private inputLifecycleStopWatch;
    get scopedContextKeyService(): IContextKeyService | undefined;
    constructor(group: IEditorGroup, telemetryService: ITelemetryService, instantiationService: IInstantiationService, storageService: IStorageService, configurationService: ITextResourceConfigurationService, editorService: IEditorService, themeService: IThemeService, editorGroupService: IEditorGroupsService, fileService: IFileService, preferencesService: IPreferencesService);
    getTitle(): string;
    protected createEditorControl(parent: HTMLElement, configuration: ICodeEditorOptions): void;
    protected updateEditorControlOptions(options: ICodeEditorOptions): void;
    protected getMainControl(): ICodeEditor | undefined;
    private _previousViewModel;
    setInput(input: DiffEditorInput, options: ITextEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void>;
    private handleSetInputError;
    private restoreTextDiffEditorViewState;
    private openAsBinary;
    setOptions(options: ITextEditorOptions | undefined): void;
    protected shouldHandleConfigurationChangeEvent(e: ITextResourceConfigurationChangeEvent, resource: URI): boolean;
    protected computeConfiguration(configuration: IEditorConfiguration): ICodeEditorOptions;
    protected getConfigurationOverrides(configuration: IEditorConfiguration): IDiffEditorOptions;
    protected updateReadonly(input: EditorInput): void;
    private isFileBinaryError;
    clearInput(): void;
    private logInputLifecycleTelemetry;
    getControl(): IDiffEditor | undefined;
    focus(): void;
    hasFocus(): boolean;
    protected setEditorVisible(visible: boolean): void;
    layout(dimension: Dimension): void;
    setBoundarySashes(sashes: IBoundarySashes): void;
    protected tracksEditorViewState(input: EditorInput): boolean;
    protected computeEditorViewState(resource: URI): IDiffEditorViewState | undefined;
    protected toEditorViewStateResource(modelOrInput: IDiffEditorModel | EditorInput): URI | undefined;
}
