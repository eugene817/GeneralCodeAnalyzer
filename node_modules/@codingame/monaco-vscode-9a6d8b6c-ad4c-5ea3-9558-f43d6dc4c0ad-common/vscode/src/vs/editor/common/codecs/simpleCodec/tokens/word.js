
import { BaseToken } from '../../baseToken.js';
import { Range } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/core/range';
import { Position } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/core/position';

class Word extends BaseToken {
    constructor(
    range,
    text) {
        super(range);
        this.text = text;
    }
    static newOnLine(text, line, atColumnNumber) {
        const { range } = line;
        const startPosition = ( new Position(range.startLineNumber, atColumnNumber));
        const endPosition = ( new Position(range.startLineNumber, atColumnNumber + text.length));
        return ( new Word(Range.fromPositions(startPosition, endPosition), text));
    }
    equals(other) {
        if (!super.equals(other)) {
            return false;
        }
        if (!(other instanceof Word)) {
            return false;
        }
        return this.text === other.text;
    }
    toString() {
        return `word("${this.text.slice(0, 8)}")${this.range}`;
    }
}

export { Word };
