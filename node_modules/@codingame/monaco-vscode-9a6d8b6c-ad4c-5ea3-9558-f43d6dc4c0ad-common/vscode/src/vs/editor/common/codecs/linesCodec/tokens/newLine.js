
import { BaseToken } from '../../baseToken.js';
import { VSBuffer } from '@codingame/monaco-vscode-api/vscode/vs/base/common/buffer';
import { Range } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/core/range';
import { Position } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/core/position';

class NewLine extends BaseToken {
    static { this.symbol = '\n'; }
    static { this.byte = VSBuffer.fromString(NewLine.symbol); }
    get text() {
        return NewLine.symbol;
    }
    get byte() {
        return NewLine.byte;
    }
    static newOnLine(line, atColumnNumber) {
        const { range } = line;
        const startPosition = ( new Position(range.startLineNumber, atColumnNumber));
        const endPosition = ( new Position(range.startLineNumber, atColumnNumber + this.symbol.length));
        return ( new NewLine(Range.fromPositions(startPosition, endPosition)));
    }
    toString() {
        return `newline${this.range}`;
    }
}

export { NewLine };
