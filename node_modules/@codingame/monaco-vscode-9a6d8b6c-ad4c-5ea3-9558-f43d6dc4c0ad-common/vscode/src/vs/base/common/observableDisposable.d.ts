import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
export declare abstract class ObservableDisposable extends Disposable {
    private readonly _onDispose;
    onDispose(callback: () => void): this;
    private _disposed;
    get disposed(): boolean;
    dispose(): void;
    assertNotDisposed(error: string | Error): asserts this is TNotDisposed<this>;
}
type TNotDisposed<TObject extends {
    disposed: boolean;
}> = TObject & {
    disposed: false;
};
export declare function assertNotDisposed<TObject extends {
    disposed: boolean;
}>(object: TObject, error: string | Error): asserts object is TNotDisposed<TObject>;
export {};
