import { Emitter, Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { ICodeEditor } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/editorBrowser";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { INotebookCellActionContext } from "../../controller/coreActions.js";
import { ICellViewModel, INotebookEditorDelegate } from "../../notebookBrowser.js";
import { CellContentPart } from "../cellPart.js";
import { IClickTarget } from "./cellWidgets.js";
import { IHoverService } from "@codingame/monaco-vscode-api/vscode/vs/platform/hover/browser/hover.service";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
export declare class CellEditorStatusBar extends CellContentPart {
    private readonly _notebookEditor;
    private readonly _cellContainer;
    private readonly _editor;
    private readonly _instantiationService;
    private readonly _themeService;
    readonly statusBarContainer: HTMLElement;
    private readonly leftItemsContainer;
    private readonly rightItemsContainer;
    private readonly itemsDisposable;
    private leftItems;
    private rightItems;
    private width;
    private currentContext;
    protected readonly _onDidClick: Emitter<IClickTarget>;
    readonly onDidClick: Event<IClickTarget>;
    private readonly hoverDelegate;
    constructor(_notebookEditor: INotebookEditorDelegate, _cellContainer: HTMLElement, editorPart: HTMLElement, _editor: ICodeEditor | undefined, _instantiationService: IInstantiationService, hoverService: IHoverService, configurationService: IConfigurationService, _themeService: IThemeService);
    didRenderCell(element: ICellViewModel): void;
    updateInternalLayoutNow(element: ICellViewModel): void;
    private getMaxItemWidth;
    updateContext(context: INotebookCellActionContext): void;
    private updateActiveCell;
    private updateRenderedItems;
    dispose(): void;
}
