import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { ExtensionIdentifier } from "@codingame/monaco-vscode-api/vscode/vs/platform/extensions/common/extensions";
import { IExtensionFeaturesManagementService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/services/extensionManagement/common/extensionFeatures.service";
import { ILanguageModelStatsService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/languageModelStats.service";
export declare class LanguageModelStatsService extends Disposable implements ILanguageModelStatsService {
    private readonly extensionFeaturesManagementService;
    _serviceBrand: undefined;
    constructor(extensionFeaturesManagementService: IExtensionFeaturesManagementService, storageService: IStorageService);
    update(model: string, extensionId: ExtensionIdentifier, agent: string | undefined, tokenCount: number | undefined): Promise<void>;
}
export declare const CopilotUsageExtensionFeatureId = "copilot";
