import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { ICommentService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/comments/browser/commentService.service";
import { ICellViewModel, INotebookEditorDelegate } from "../../notebookBrowser.js";
import { CellContentPart } from "../cellPart.js";
export declare class CellComments extends CellContentPart {
    private readonly notebookEditor;
    private readonly container;
    private readonly contextKeyService;
    private readonly themeService;
    private readonly commentService;
    private readonly configurationService;
    private readonly instantiationService;
    private readonly _commentThreadWidgets;
    private currentElement;
    constructor(notebookEditor: INotebookEditorDelegate, container: HTMLElement, contextKeyService: IContextKeyService, themeService: IThemeService, commentService: ICommentService, configurationService: IConfigurationService, instantiationService: IInstantiationService);
    private initialize;
    private _createCommentTheadWidget;
    private _bindListeners;
    private _updateThread;
    private _calculateCommentThreadHeight;
    private _updateHeight;
    private _getCommentThreadsForCell;
    private _applyTheme;
    didRenderCell(element: ICellViewModel): void;
    prepareLayout(): void;
    updateInternalLayoutNow(element: ICellViewModel): void;
}
