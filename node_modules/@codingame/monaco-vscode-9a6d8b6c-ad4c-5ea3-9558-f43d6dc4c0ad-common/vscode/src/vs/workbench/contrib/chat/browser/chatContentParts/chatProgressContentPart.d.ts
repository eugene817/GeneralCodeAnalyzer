import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { ThemeIcon } from "@codingame/monaco-vscode-api/vscode/vs/base/common/themables";
import { MarkdownRenderer } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IChatProgressMessage, IChatTask } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatService";
import { IChatRendererContent, IChatWorkingProgress } from "../../common/chatViewModel.js";
import { ChatTreeItem } from "../chat.js";
import { IChatContentPart, IChatContentPartRenderContext } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/browser/chatContentParts/chatContentParts";
import { IChatMarkdownAnchorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/browser/chatContentParts/chatMarkdownAnchorService.service";
export declare class ChatProgressContentPart extends Disposable implements IChatContentPart {
    private readonly instantiationService;
    private readonly chatMarkdownAnchorService;
    readonly domNode: HTMLElement;
    private readonly showSpinner;
    private readonly isHidden;
    constructor(progress: IChatProgressMessage | IChatTask, renderer: MarkdownRenderer, context: IChatContentPartRenderContext, forceShowSpinner: boolean | undefined, forceShowMessage: boolean | undefined, icon: ThemeIcon | undefined, instantiationService: IInstantiationService, chatMarkdownAnchorService: IChatMarkdownAnchorService);
    private renderFileWidgets;
    hasSameContent(other: IChatRendererContent, followingContent: IChatRendererContent[], element: ChatTreeItem): boolean;
}
export declare class ChatWorkingProgressContentPart extends ChatProgressContentPart implements IChatContentPart {
    private readonly workingProgress;
    constructor(workingProgress: IChatWorkingProgress, renderer: MarkdownRenderer, context: IChatContentPartRenderContext, instantiationService: IInstantiationService, chatMarkdownAnchorService: IChatMarkdownAnchorService);
    hasSameContent(other: IChatRendererContent, followingContent: IChatRendererContent[], element: ChatTreeItem): boolean;
}
export declare class ChatCustomProgressPart {
    readonly domNode: HTMLElement;
    constructor(messageElement: HTMLElement, icon: ThemeIcon);
}
