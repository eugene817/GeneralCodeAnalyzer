import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IContextMenuService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextview/browser/contextView.service";
import { IHoverService } from "@codingame/monaco-vscode-api/vscode/vs/platform/hover/browser/hover.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IKeybindingService } from "@codingame/monaco-vscode-api/vscode/vs/platform/keybinding/common/keybinding.service";
import { ILayoutService } from "@codingame/monaco-vscode-api/vscode/vs/platform/layout/browser/layoutService.service";
import { ILogService } from "@codingame/monaco-vscode-api/vscode/vs/platform/log/common/log.service";
import { IOpenerService } from "@codingame/monaco-vscode-api/vscode/vs/platform/opener/common/opener.service";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { IThemeService } from "@codingame/monaco-vscode-api/vscode/vs/platform/theme/common/themeService.service";
import { IViewPaneOptions, ViewPane } from "@codingame/monaco-vscode-65619f8f-0eab-5d8b-855a-43b6353fe527-common/vscode/vs/workbench/browser/parts/views/viewPane";
import { IViewDescriptorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/views.service";
import { IChatViewTitleActionContext } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatActions";
import { ChatAgentLocation } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatAgents";
import { IChatAgentService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatAgents.service";
import { IChatService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatService.service";
import { ChatWidget, IChatViewState } from "./chatWidget.js";
import { IViewWelcomeDelegate } from "./viewsWelcome/chatViewWelcomeController.js";
export declare const CHAT_SIDEBAR_OLD_VIEW_PANEL_ID = "workbench.panel.chatSidebar";
export declare const CHAT_SIDEBAR_PANEL_ID = "workbench.panel.chat";
export declare const CHAT_EDITING_SIDEBAR_PANEL_ID = "workbench.panel.chatEditing";
export declare class ChatViewPane extends ViewPane implements IViewWelcomeDelegate {
    private readonly chatOptions;
    private readonly storageService;
    private readonly chatService;
    private readonly chatAgentService;
    private readonly logService;
    private readonly layoutService;
    private _widget;
    get widget(): ChatWidget;
    private readonly modelDisposables;
    private memento;
    private readonly viewState;
    private defaultParticipantRegistrationFailed;
    private didUnregisterProvider;
    constructor(chatOptions: {
        location: ChatAgentLocation.Panel | ChatAgentLocation.EditingSession;
    }, options: IViewPaneOptions, keybindingService: IKeybindingService, contextMenuService: IContextMenuService, configurationService: IConfigurationService, contextKeyService: IContextKeyService, viewDescriptorService: IViewDescriptorService, instantiationService: IInstantiationService, openerService: IOpenerService, themeService: IThemeService, hoverService: IHoverService, storageService: IStorageService, chatService: IChatService, chatAgentService: IChatAgentService, logService: ILogService, layoutService: ILayoutService);
    getActionsContext(): IChatViewTitleActionContext | undefined;
    private updateModel;
    shouldShowWelcome(): boolean;
    private getSessionId;
    protected renderBody(parent: HTMLElement): void;
    acceptInput(query?: string): void;
    private clear;
    loadSession(sessionId: string, viewState?: IChatViewState): void;
    focusInput(): void;
    focus(): void;
    protected layoutBody(height: number, width: number): void;
    saveState(): void;
    private updateViewState;
}
