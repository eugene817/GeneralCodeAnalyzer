import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IMarkerService } from "@codingame/monaco-vscode-api/vscode/vs/platform/markers/common/markers.service";
import { INotebookEditor } from "../notebookBrowser.js";
import { OutlineChangeEvent } from "@codingame/monaco-vscode-2e69e120-617a-5258-95e0-3b8902f4e014-common/vscode/vs/workbench/services/outline/browser/outline";
import { OutlineEntry } from "./OutlineEntry.js";
import { CancellationToken } from "@codingame/monaco-vscode-api/vscode/vs/base/common/cancellation";
import { NotebookOutlineEntryFactory } from "@codingame/monaco-vscode-notebook-service-override/vscode/vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineEntryFactory";
export interface INotebookCellOutlineDataSource {
    readonly activeElement: OutlineEntry | undefined;
    readonly entries: OutlineEntry[];
}
export declare class NotebookCellOutlineDataSource implements INotebookCellOutlineDataSource {
    private readonly _editor;
    private readonly _markerService;
    private readonly _configurationService;
    private readonly _outlineEntryFactory;
    private readonly _disposables;
    private readonly _onDidChange;
    readonly onDidChange: Event<OutlineChangeEvent>;
    private _uri;
    private _entries;
    private _activeEntry?;
    constructor(_editor: INotebookEditor, _markerService: IMarkerService, _configurationService: IConfigurationService, _outlineEntryFactory: NotebookOutlineEntryFactory);
    get activeElement(): OutlineEntry | undefined;
    get entries(): OutlineEntry[];
    get isEmpty(): boolean;
    get uri(): URI | undefined;
    computeFullSymbols(cancelToken: CancellationToken): Promise<void>;
    recomputeState(): void;
    recomputeActive(): {
        changeEventTriggered: boolean;
    };
    dispose(): void;
}
