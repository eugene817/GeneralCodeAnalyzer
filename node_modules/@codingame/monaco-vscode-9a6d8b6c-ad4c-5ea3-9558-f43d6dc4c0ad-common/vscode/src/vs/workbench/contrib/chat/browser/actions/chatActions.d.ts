import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IActionViewItemService } from "@codingame/monaco-vscode-api/vscode/vs/platform/actions/browser/actionViewItemService.service";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IWorkbenchContribution } from "@codingame/monaco-vscode-api/vscode/vs/workbench/common/contributions";
import { IChatAgentService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatAgents.service";
import { IChatRequestViewModel, IChatResponseViewModel } from "../../common/chatViewModel.js";
import { IChatQuotasService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatQuotasService.service";
export declare const CHAT_CATEGORY: import("@codingame/monaco-vscode-api/vscode/vs/nls").ILocalizedString;
export declare const CHAT_OPEN_ACTION_ID = "workbench.action.chat.open";
export declare const CHAT_OPEN_ACTION_LABEL: import("@codingame/monaco-vscode-api/vscode/vs/nls").ILocalizedString;
export declare const CHAT_SETUP_ACTION_ID = "workbench.action.chat.triggerSetup";
export declare const CHAT_SETUP_ACTION_LABEL: import("@codingame/monaco-vscode-api/vscode/vs/nls").ILocalizedString;
export declare const TOGGLE_CHAT_ACTION_ID = "workbench.action.chat.toggle";
export declare const TOGGLE_CHAT_ACTION_LABEL: string;
export interface IChatViewOpenOptions {
    query: string;
    isPartialQuery?: boolean;
    toolIds?: string[];
    previousRequests?: IChatViewOpenRequestEntry[];
    attachScreenshot?: boolean;
}
export interface IChatViewOpenRequestEntry {
    request: string;
    response: string;
}
export declare const OPEN_CHAT_QUOTA_EXCEEDED_DIALOG = "workbench.action.chat.openQuotaExceededDialog";
export declare function registerChatActions(): void;
export declare function stringifyItem(item: IChatRequestViewModel | IChatResponseViewModel, includeName?: boolean): string;
export declare class CopilotTitleBarMenuRendering extends Disposable implements IWorkbenchContribution {
    static readonly ID = "copilot.titleBarMenuRendering";
    constructor(actionViewItemService: IActionViewItemService, agentService: IChatAgentService, chatQuotasService: IChatQuotasService, instantiationService: IInstantiationService, contextKeyService: IContextKeyService);
}
export declare function quotaToButtonMessage({ chatQuotaExceeded, completionsQuotaExceeded }: {
    chatQuotaExceeded: boolean;
    completionsQuotaExceeded: boolean;
}): string;
