import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { IStorageService } from "@codingame/monaco-vscode-api/vscode/vs/platform/storage/common/storage.service";
import { ChatAgentLocation } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatAgents";
import { WorkingSetEntryState } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatEditingService";
import { IChatRequestVariableEntry } from "./chatModel.js";
import { IChatWidgetHistoryService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/chatWidgetHistoryService.service";
export interface IChatHistoryEntry {
    text: string;
    state?: IChatInputState;
}
export interface IChatInputState {
    [key: string]: any;
    chatContextAttachments?: ReadonlyArray<IChatRequestVariableEntry>;
    chatWorkingSet?: ReadonlyArray<{
        uri: URI;
        state: WorkingSetEntryState;
    }>;
}
export declare const ChatInputHistoryMaxEntries = 40;
export declare class ChatWidgetHistoryService implements IChatWidgetHistoryService {
    _serviceBrand: undefined;
    private memento;
    private viewState;
    private readonly _onDidClearHistory;
    readonly onDidClearHistory: Event<void>;
    constructor(storageService: IStorageService);
    getHistory(location: ChatAgentLocation): IChatHistoryEntry[];
    private getKey;
    saveHistory(location: ChatAgentLocation, history: IChatHistoryEntry[]): void;
    clearHistory(): void;
}
