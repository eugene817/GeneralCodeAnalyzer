import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IEditorOptions } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/config/editorOptions";
import { IConfigurationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service";
import { IBaseCellEditorOptions, INotebookEditorDelegate } from "../notebookBrowser.js";
import { NotebookOptions } from "../notebookOptions.js";
export declare class BaseCellEditorOptions extends Disposable implements IBaseCellEditorOptions {
    readonly notebookEditor: INotebookEditorDelegate;
    readonly notebookOptions: NotebookOptions;
    readonly configurationService: IConfigurationService;
    readonly language: string;
    private static fixedEditorOptions;
    private readonly _localDisposableStore;
    private readonly _onDidChange;
    readonly onDidChange: Event<void>;
    private _value;
    get value(): Readonly<IEditorOptions>;
    constructor(notebookEditor: INotebookEditorDelegate, notebookOptions: NotebookOptions, configurationService: IConfigurationService, language: string);
    private _recomputeOptions;
    private _computeEditorOptions;
}
