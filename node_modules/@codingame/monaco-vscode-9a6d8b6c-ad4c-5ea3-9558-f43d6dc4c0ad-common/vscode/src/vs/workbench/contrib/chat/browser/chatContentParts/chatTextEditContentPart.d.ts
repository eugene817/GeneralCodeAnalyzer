import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { Disposable, IDisposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { IChatListItemRendererOptions } from "../chat.js";
import { IDisposableReference } from "./chatCollections.js";
import { IChatContentPart, IChatContentPartRenderContext } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/browser/chatContentParts/chatContentParts";
import { IChatRendererDelegate } from "../chatListRenderer.js";
import { ChatEditorOptions } from "../chatOptions.js";
import { CodeCompareBlockPart } from "../codeBlockPart.js";
import { IChatProgressRenderableResponseContent, IChatTextEditGroup } from "../../common/chatModel.js";
import { ICodeCompareModelService } from "./chatTextEditContentPart.service.js";
export declare class ChatTextEditContentPart extends Disposable implements IChatContentPart {
    private readonly codeCompareModelService;
    readonly domNode: HTMLElement;
    private readonly comparePart;
    private readonly _onDidChangeHeight;
    readonly onDidChangeHeight: Event<void>;
    constructor(chatTextEdit: IChatTextEditGroup, context: IChatContentPartRenderContext, rendererOptions: IChatListItemRendererOptions, diffEditorPool: DiffEditorPool, currentWidth: number, codeCompareModelService: ICodeCompareModelService);
    layout(width: number): void;
    hasSameContent(other: IChatProgressRenderableResponseContent): boolean;
    addDisposable(disposable: IDisposable): void;
}
export declare class DiffEditorPool extends Disposable {
    private readonly _pool;
    inUse(): Iterable<CodeCompareBlockPart>;
    constructor(options: ChatEditorOptions, delegate: IChatRendererDelegate, overflowWidgetsDomNode: HTMLElement | undefined, instantiationService: IInstantiationService);
    get(): IDisposableReference<CodeCompareBlockPart>;
}
