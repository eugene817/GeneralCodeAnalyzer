import * as DOM from "@codingame/monaco-vscode-api/vscode/vs/base/browser/dom";
import { CodeWindow } from "@codingame/monaco-vscode-api/vscode/vs/base/browser/window";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
import { NotebookTextModel } from "@codingame/monaco-vscode-notebook-service-override/vscode/vs/workbench/contrib/notebook/common/model/notebookTextModel";
import { NotebookDiffEditorInput } from "@codingame/monaco-vscode-e4d0fd26-1b26-5583-b3f7-582e08d7b389-common/vscode/vs/workbench/contrib/notebook/common/notebookDiffEditorInput";
import { INotebookEditorOptions } from "../../notebookBrowser.js";
import { NotebookEditorWidget } from "../../notebookEditorWidget.js";
import { NotebookOptions } from "../../notebookOptions.js";
import { INotebookEditorService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/notebook/browser/services/notebookEditorService.service";
export declare class NotebookInlineDiffWidget extends Disposable {
    private readonly rootElement;
    private readonly groupId;
    private readonly window;
    private readonly options;
    private dimension;
    private readonly instantiationService;
    private readonly widgetService;
    private widget;
    private position;
    get editorWidget(): NotebookEditorWidget | undefined;
    constructor(rootElement: HTMLElement, groupId: number, window: CodeWindow, options: NotebookOptions, dimension: DOM.Dimension | undefined, instantiationService: IInstantiationService, widgetService: INotebookEditorService);
    show(input: NotebookDiffEditorInput, model: NotebookTextModel | undefined, previousModel: NotebookTextModel | undefined, options: INotebookEditorOptions | undefined): Promise<void>;
    hide(): void;
    setLayout(dimension: DOM.Dimension, position: DOM.IDomPosition): void;
    private createNotebookWidget;
    dispose(): void;
}
