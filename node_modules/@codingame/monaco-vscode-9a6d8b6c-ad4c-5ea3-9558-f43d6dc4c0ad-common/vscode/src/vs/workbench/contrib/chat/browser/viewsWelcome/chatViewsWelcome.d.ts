import { Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { IMarkdownString } from "@codingame/monaco-vscode-api/vscode/vs/base/common/htmlContent";
import { DisposableStore } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { ThemeIcon } from "@codingame/monaco-vscode-api/vscode/vs/base/common/themables";
import { ContextKeyExpression } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey";
export declare enum ChatViewsWelcomeExtensions {
    ChatViewsWelcomeRegistry = "workbench.registry.chat.viewsWelcome"
}
export interface IChatViewsWelcomeDescriptor {
    icon?: ThemeIcon;
    title: string;
    content: IMarkdownString | ((disposables: DisposableStore) => HTMLElement);
    when: ContextKeyExpression;
}
export interface IChatViewsWelcomeContributionRegistry {
    onDidChange: Event<void>;
    get(): ReadonlyArray<IChatViewsWelcomeDescriptor>;
    register(descriptor: IChatViewsWelcomeDescriptor): void;
}
declare class ChatViewsWelcomeContributionRegistry implements IChatViewsWelcomeContributionRegistry {
    private readonly descriptors;
    private readonly _onDidChange;
    readonly onDidChange: Event<void>;
    register(descriptor: IChatViewsWelcomeDescriptor): void;
    get(): ReadonlyArray<IChatViewsWelcomeDescriptor>;
}
export declare const chatViewsWelcomeRegistry: ChatViewsWelcomeContributionRegistry;
export {};
