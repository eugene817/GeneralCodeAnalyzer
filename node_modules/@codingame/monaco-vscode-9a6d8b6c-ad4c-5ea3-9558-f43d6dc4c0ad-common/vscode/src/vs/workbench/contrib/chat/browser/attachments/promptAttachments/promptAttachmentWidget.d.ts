import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { Emitter } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { ResourceLabels } from "@codingame/monaco-vscode-12c5f9eb-72d3-57ca-babd-5bef7aa9de3b-common/vscode/vs/workbench/browser/labels";
import { ILabelService } from "@codingame/monaco-vscode-api/vscode/vs/platform/label/common/label.service";
import { IModelService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/services/model.service";
import { IHoverService } from "@codingame/monaco-vscode-api/vscode/vs/platform/hover/browser/hover.service";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { ILanguageService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/languages/language.service";
import { IFileService } from "@codingame/monaco-vscode-api/vscode/vs/platform/files/common/files.service";
import { IMenuService } from "@codingame/monaco-vscode-api/vscode/vs/platform/actions/common/actions.service";
import { ChatPromptAttachmentModel } from "../../chatAttachmentModel/chatPromptAttachmentModel.js";
import { IContextKeyService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextkey/common/contextkey.service";
import { IContextMenuService } from "@codingame/monaco-vscode-api/vscode/vs/platform/contextview/browser/contextView.service";
export declare class PromptAttachmentWidget extends Disposable {
    private readonly model;
    private readonly resourceLabels;
    private readonly contextKeyService;
    private readonly contextMenuService;
    private readonly hoverService;
    private readonly labelService;
    private readonly menuService;
    private readonly fileService;
    private readonly languageService;
    private readonly modelService;
    readonly domNode: HTMLElement;
    get uri(): URI;
    protected _onDispose: Emitter<void>;
    onDispose(callback: () => unknown): this;
    private readonly renderDisposables;
    constructor(model: ChatPromptAttachmentModel, resourceLabels: ResourceLabels, contextKeyService: IContextKeyService, contextMenuService: IContextMenuService, hoverService: IHoverService, labelService: ILabelService, menuService: IMenuService, fileService: IFileService, languageService: ILanguageService, modelService: IModelService);
    private render;
    dispose(): void;
}
