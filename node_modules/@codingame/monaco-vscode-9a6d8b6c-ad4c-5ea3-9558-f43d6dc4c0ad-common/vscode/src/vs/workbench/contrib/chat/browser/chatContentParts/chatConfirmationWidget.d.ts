import { Emitter, Event } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { IMarkdownString } from "@codingame/monaco-vscode-api/vscode/vs/base/common/htmlContent";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { MarkdownRenderer } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
export interface IChatConfirmationButton {
    label: string;
    isSecondary?: boolean;
    tooltip?: string;
    data: any;
}
declare abstract class BaseChatConfirmationWidget extends Disposable {
    protected readonly instantiationService: IInstantiationService;
    private _onDidClick;
    get onDidClick(): Event<IChatConfirmationButton>;
    protected _onDidChangeHeight: Emitter<void>;
    get onDidChangeHeight(): Event<void>;
    private _domNode;
    get domNode(): HTMLElement;
    setShowButtons(showButton: boolean): void;
    private readonly messageElement;
    protected readonly markdownRenderer: MarkdownRenderer;
    constructor(title: string, buttons: IChatConfirmationButton[], instantiationService: IInstantiationService);
    protected renderMessage(element: HTMLElement): void;
}
export declare class ChatConfirmationWidget extends BaseChatConfirmationWidget {
    private readonly message;
    constructor(title: string, message: string | IMarkdownString, buttons: IChatConfirmationButton[], instantiationService: IInstantiationService);
}
export declare class ChatCustomConfirmationWidget extends BaseChatConfirmationWidget {
    constructor(title: string, messageElement: HTMLElement, buttons: IChatConfirmationButton[], instantiationService: IInstantiationService);
}
export {};
