import { MarkdownRenderOptions, MarkedOptions } from "@codingame/monaco-vscode-api/vscode/vs/base/browser/markdownRenderer";
import { IMarkdownString } from "@codingame/monaco-vscode-api/vscode/vs/base/common/htmlContent";
import { IMarkdownRendererOptions, IMarkdownRenderResult, MarkdownRenderer } from "@codingame/monaco-vscode-api/vscode/vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer";
import { ILanguageService } from "@codingame/monaco-vscode-api/vscode/vs/editor/common/languages/language.service";
import { ICommandService } from "@codingame/monaco-vscode-api/vscode/vs/platform/commands/common/commands.service";
import { IFileService } from "@codingame/monaco-vscode-api/vscode/vs/platform/files/common/files.service";
import { IHoverService } from "@codingame/monaco-vscode-api/vscode/vs/platform/hover/browser/hover.service";
import { IOpenerService } from "@codingame/monaco-vscode-api/vscode/vs/platform/opener/common/opener.service";
import { ITrustedDomainService } from "@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/url/browser/trustedDomainService.service";
export declare class ChatMarkdownRenderer extends MarkdownRenderer {
    private readonly trustedDomainService;
    private readonly hoverService;
    private readonly fileService;
    private readonly commandService;
    constructor(options: IMarkdownRendererOptions | undefined, languageService: ILanguageService, openerService: IOpenerService, trustedDomainService: ITrustedDomainService, hoverService: IHoverService, fileService: IFileService, commandService: ICommandService);
    render(markdown: IMarkdownString | undefined, options?: MarkdownRenderOptions, markedOptions?: MarkedOptions): IMarkdownRenderResult;
    private attachCustomHover;
    protected openMarkdownLink(link: string, markdown: IMarkdownString): Promise<any>;
}
