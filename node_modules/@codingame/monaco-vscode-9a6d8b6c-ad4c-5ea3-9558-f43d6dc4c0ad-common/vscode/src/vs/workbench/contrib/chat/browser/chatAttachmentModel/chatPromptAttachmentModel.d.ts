import { URI } from "@codingame/monaco-vscode-api/vscode/vs/base/common/uri";
import { Emitter } from "@codingame/monaco-vscode-api/vscode/vs/base/common/event";
import { Disposable } from "@codingame/monaco-vscode-api/vscode/vs/base/common/lifecycle";
import { FilePromptParser } from "../../common/promptSyntax/parsers/filePromptParser.js";
import { IInstantiationService } from "@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation";
export declare class ChatPromptAttachmentModel extends Disposable {
    private readonly initService;
    private readonly _reference;
    get reference(): FilePromptParser;
    get references(): readonly URI[];
    get allSettled(): Promise<FilePromptParser>;
    get topError(): import("@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/chat/common/promptSyntax/parsers/types").IResolveError | undefined;
    protected _onUpdate: Emitter<void>;
    onUpdate(callback: () => unknown): this;
    protected _onDispose: Emitter<void>;
    onDispose(callback: () => unknown): this;
    constructor(uri: URI, initService: IInstantiationService);
    resolve(): this;
    dispose(): void;
}
