/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2024 TypeFox and others.
 * Licensed under the MIT License. See LICENSE in the package root for license information.
 * ------------------------------------------------------------------------------------------ */
import { EndpointType } from '../definitions.js';
export class EmptyFileSystemEndpoint {
    endpointType;
    logger;
    constructor(endpointType) {
        this.endpointType = endpointType;
    }
    init() { }
    getFileSystemInfo() {
        return 'This file system performs no operations.';
    }
    setLogger(logger) {
        this.logger = logger;
    }
    getEndpointType() {
        return this.endpointType;
    }
    readFile(params) {
        this.logger?.info(`Reading file: ${params.resourceUri}`);
        return Promise.resolve({
            status: 'denied',
            content: ''
        });
    }
    writeFile(params) {
        this.logger?.info(`Writing file: ${params.resourceUri}`);
        return Promise.resolve({ status: 'denied' });
    }
    syncFile(params) {
        this.logger?.info(`Syncing file: ${params.resourceUri}`);
        return Promise.resolve({ status: 'denied' });
    }
    getFileStats(params) {
        this.logger?.info(`Getting file stats for: "${params.resourceUri}" (${params.type})`);
        return Promise.reject('No stats available.');
    }
    listFiles(params) {
        this.logger?.info(`Listing files for directory: "${params.directoryUri}"`);
        return Promise.reject('No file listing possible.');
    }
}
//# sourceMappingURL=defaultEndpoint.js.map